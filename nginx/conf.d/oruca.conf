
map $http_upgrade $connection_upgrade {
    default upgrade; # デフォルトでは "upgrade" を設定
    ''      close;   # $http_upgrade が空文字列の場合 (つまりUpgradeヘッダーがない場合) は "close" を設定
}

server {
    # ポート80でHTTPリクエストを待ち受けます。
    listen 80;
    # IPv6アドレスでもポート80で待ち受ける場合 (任意)
    # listen [::]:80;

    # サーバー名を設定します。クライアントがアクセスする際のホスト名と一致させる必要があります。
    # 例: example.com, sub.example.com, localhost (ローカルテスト時)
    # ユーザーの環境に合わせて 'oruca.fukaya-sus.lab' を使用します。
    server_name oruca.fukaya-sus.lab;

    # アクセスログとエラーログのパスを指定します (任意)。
    # Dockerでログを永続化する場合や、個別のログファイルに分けたい場合に設定します。
    # access_log /var/log/nginx/reverse_proxy.access.log;
    # error_log /var/log/nginx/reverse_proxy.error.log;

    # すべてのリクエスト (ルートパス / およびそれ以下のパス) を処理するlocationブロック。
    location / {
        # バックエンドサーバー (サービスAのWebコンテナ) のアドレスとポートを指定します。
        # 'web' はサービスAのdocker-compose.ymlで定義されたWebサーバーのサービス名です。
        # Dockerの内部DNSによって 'web' サービス名が解決されます。
        proxy_pass http://web:80;

        # --- 標準的なプロキシヘッダー ---
        # クライアントから送信されたオリジナルのHostヘッダーをバックエンドに渡します。
        # これにより、バックエンドサーバーは正しいホスト名でリクエストを認識できます。
        proxy_set_header Host $host;

        # クライアントの実際のIPアドレスをバックエンドに渡します。
        # これがないと、バックエンドサーバーはリクエスト元をリバースプロキシのIPアドレスと認識してしまいます。
        proxy_set_header X-Real-IP $remote_addr;

        # プロキシサーバーを経由したIPアドレスのリストをバックエンドに渡します。
        # 複数のプロキシを経由する場合に、クライアントの元のIPアドレスを特定するのに役立ちます。
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # クライアントがリバースプロキシに接続した際のプロトコル (httpまたはhttps) をバックエンドに渡します。
        # リバースプロキシでSSL/TLSを終端し、バックエンドへはHTTPで通信する場合に特に重要です。
        proxy_set_header X-Forwarded-Proto $scheme;

        # --- WebSocket対応のためのヘッダー ---
        # バックエンドサーバーへのプロキシリクエストをHTTP/1.1で行うことを明示します。
        # WebSocketはHTTP/1.1の機能を必要とします。
        proxy_http_version 1.1;

        # クライアントから送信されたUpgradeヘッダーをバックエンドサーバーに渡します。
        # これにより、プロトコルのアップグレード要求がバックエンドに伝わります。
        # ($http_upgrade 変数は、クライアントのリクエストヘッダーから取得されます)
        proxy_set_header Upgrade $http_upgrade;

        # クライアントから送信されたConnectionヘッダーを適切に処理してバックエンドサーバーに渡します。
        # WebSocketハンドシェイク時には "Upgrade" を含む値が期待されます。
        # (上記のmapディレクティブで定義された $connection_upgrade 変数を利用します)
        proxy_set_header Connection $connection_upgrade;
    }
}
